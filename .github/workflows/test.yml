name: Tests

on:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    paths-ignore:
      - 'README.md'

permissions:
  contents: read

jobs:
  gpg:
    runs-on: ubuntu-latest
    steps:
      # Ensure gpg-agent is started with allow-preset-passphrase
      - name: Ensure gpg-agent allows preset
        run: |
          mkdir -p ~/.gnupg
          echo "allow-preset-passphrase" >> ~/.gnupg/gpg-agent.conf
          gpgconf --kill gpg-agent
          gpgconf --launch gpg-agent

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@e89d40939c28e39f97cf32126055eeae86ba74ec # v6.3.0
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          fingerprint: ${{ secrets.GPG_SUBKEY }}

  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Configure Git for GitLab
        run: |
          git config --global url."https://gitlab-ci-token:${{ secrets.GITLAB_TOKEN }}@gitlab.com".insteadOf "https://gitlab.com"
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@v7
        with:
          version: latest

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Configure Git for GitLab
        run: |
          git config --global url."https://gitlab-ci-token:${{ secrets.GITLAB_TOKEN }}@gitlab.com".insteadOf "https://gitlab.com"
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
      - run: make generate
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected diff after generate. Run 'make generate' locally and commit changes."; exit 1)

  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on:
      group: Default
    env:
      NEXAA_USERNAME: ${{ secrets.STAGING_NEXAA_CLOUD_USER }}
      NEXAA_PASSWORD: ${{ secrets.STAGING_NEXAA_CLOUD_PASSWORD }}
      TILAA_ENV: ${{ secrets.TILAA_ENV }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        terraform:
          - '1.0.*'
          - '1.1.*'
          - '1.2.*'
          - '1.3.*'
          - '1.4.*'

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false

      - name: Build provider binary
        run: |
          mkdir -p "${HOME}/.terraform.d/plugins/registry.terraform.io/tilaa/nexaa/0.1.0/linux_amd64"
          go build -o "${HOME}/.terraform.d/plugins/registry.terraform.io/tilaa/nexaa/0.1.0/linux_amd64/terraform-provider-nexaa"

      - name: Write .terraformrc
        run: |
          cat <<EOF > ~/.terraformrc
          provider_installation {
            filesystem_mirror {
              path    = "${HOME}/.terraform.d/plugins"
              include = ["tilaa/nexaa"]
            }
            direct {}
          }
          EOF

      - name: Write minimal main.tf
        run: |
          mkdir -p test-tmp
          cat <<EOF > test-tmp/main.tf
          terraform {
            required_providers {
              nexaa = {
                source  = "tilaa/nexaa"
                version = "0.1.0"
              }
            }
          }
          EOF

      - name: Terraform init
        working-directory: test-tmp
        run: terraform init

      - name: Run Acceptance Tests
        env:
          USERNAME: ${{ secrets.STAGING_NEXAA_CLOUD_USER }}
          PASSWORD: ${{ secrets.STAGING_NEXAA_CLOUD_PASSWORD }}
          TILAA_ENV: ${{ secrets.TILAA_ENV }}
        working-directory: .
        run: TF_ACC=1 go test -v -cover ./internal/...
